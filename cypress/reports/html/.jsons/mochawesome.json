{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-06T14:24:29.937Z",
    "end": "2024-08-06T14:24:33.423Z",
    "duration": 3486,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f60d6050-c53f-4592-9582-9f4717cc20d2",
      "title": "",
      "fullFile": "cypress/integration/examples/Test1.js",
      "file": "cypress/integration/examples/Test1.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "90bffbd5-cf44-4c9b-a291-044cfb37570c",
          "title": "My First test case",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test case",
              "fullTitle": "My First test case Test case",
              "timedOut": null,
              "duration": 2696,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://rahulshettyacademy.com/seleniumPractise/#/');\ncy.get('.search-keyword').type('ca');\ncy.wait(1000);\ncy.get('.product:visible').should('have.length', 4);\n//Cypress Aliasing\ncy.get('.products').as('productLocator');\n//Parent child chaining\ncy.get('@productLocator').find('.product').should('have.length', 4);\n//Add Capsicum to the Cart\n//cy.get('@productLocator').find('.product').eq(2).contains('ADD TO CART').click()\ncy.get('.products').find('.product').each(($el, index, $list) => {\n  const vegName = $el.find('h4.product-name').text();\n  if (vegName.includes('Cashews')) {\n    cy.wrap($el).find('button').click();\n  }\n});\n//Below we will get error bcs when we use cy.log(logo.text()), here we are not handling promise. We are changing the cypress behvr to non cypress behav ( i,e, adding const logo). In such\n//cases we need to manually handle the promise\n// const logo = cy.get('.brand')\n// cy.log(logo.text())\ncy.get('.brand').then(function (logo) {\n  cy.log(logo.text());\n});\nconsole.log('HH');\n//Assert if logo text is correctly displayed\ncy.get('.brand').should('have.text', 'GREENKART');\ncy.get('.cart-icon > img').click();\ncy.contains('PROCEED TO CHECKOUT').click();\ncy.contains('Place Order').click();",
              "err": {},
              "uuid": "06475aba-fbda-49fa-8b31-6edaeb9ae00e",
              "parentUUID": "90bffbd5-cf44-4c9b-a291-044cfb37570c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06475aba-fbda-49fa-8b31-6edaeb9ae00e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2696,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "embeddedScreenshots": true,
        "videoOnFailOnly": false,
        "saveAllAttempts": true,
        "overwrite": false,
        "reportsDir": "reports/demoFolder",
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}